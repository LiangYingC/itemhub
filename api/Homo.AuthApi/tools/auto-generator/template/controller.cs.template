using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Options;
using Homo.AuthApi;
using Homo.Core.Constants;

namespace {namespace}
{
    [{authorizeFactoryNamePrefix}AuthorizeFactory]
    [Route("v1/{snakeCaseModelsName}")]
    public class {firstUpperCamelCaseModelName}Controller : ControllerBase
    {
        private readonly DBContext _dbContext;
        public {firstUpperCamelCaseModelName}Controller(DBContext dbContext)
        {
            _dbContext = dbContext;
        }

        [HttpGet]
        public ActionResult<dynamic> getList([FromQuery] int limit, [FromQuery] int page)
        {
            List<{firstUpperCamelCaseModelName}> records = {firstUpperCamelCaseModelName}Dataservice.GetList(_dbContext, page, limit);
            return new
            {
                {firstLowerCamelCaseModelsName} = records,
                rowNums = {firstUpperCamelCaseModelName}Dataservice.GetRowNum(_dbContext)
            };
        }

        [HttpGet]
        [Route("all")]
        public ActionResult<dynamic> getAll()
        {
            return {firstUpperCamelCaseModelName}Dataservice.GetAll(_dbContext);
        }

        [HttpPost]
        public ActionResult<dynamic> create([FromBody] DTOs.{firstUpperCamelCaseModelName} dto, Homo.AuthApi.DTOs.JwtExtraPayload extraPayload)
        {
            long createdBy = extraPayload.Id;
            {firstUpperCamelCaseModelName} rewRecord = {firstUpperCamelCaseModelName}Dataservice.Create(_dbContext, createdBy, dto);
            return rewRecord;
        }

        [HttpDelete]
        public ActionResult<dynamic> batchDelete([FromBody] List<long> ids, Homo.AuthApi.DTOs.JwtExtraPayload extraPayload)
        {
            long editedBy = extraPayload.Id;
            {firstUpperCamelCaseModelName}Dataservice.BatchDelete(_dbContext, editedBy, ids);
            return new { status = CUSTOM_RESPONSE.OK };
        }

        [HttpGet]
        [Route("{id}")]
        public ActionResult<dynamic> get([FromRoute] int id, Homo.AuthApi.DTOs.JwtExtraPayload extraPayload)
        {
            {firstUpperCamelCaseModelName} record = {firstUpperCamelCaseModelName}Dataservice.GetOne(_dbContext, id); 
            if (record == null)
            {
                throw new CustomException(ERROR_CODE.DATA_NOT_FOUND, System.Net.HttpStatusCode.NotFound);
            }
            return record;
        }

        [HttpPatch]
        [Route("{id}")]
        public ActionResult<dynamic> update([FromRoute] int id, [FromBody] DTOs.{firstUpperCamelCaseModelName} dto, Homo.AuthApi.DTOs.JwtExtraPayload extraPayload)
        {
            long editedBy = extraPayload.Id;
            {firstUpperCamelCaseModelName}Dataservice.Update(_dbContext, id, editedBy, dto);
            return new { status = CUSTOM_RESPONSE.OK };
        }

        [HttpDelete]
        [Route("{id}")]
        public ActionResult<dynamic> delete([FromRoute] long id, Homo.AuthApi.DTOs.JwtExtraPayload extraPayload)
        {
            long editedBy = extraPayload.Id;
            {firstUpperCamelCaseModelName}Dataservice.Delete(_dbContext, id, editedBy);
            return new { status = CUSTOM_RESPONSE.OK };
        }

    }
}
